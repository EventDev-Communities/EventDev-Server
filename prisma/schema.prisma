generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comunidade {
  id             BigInt    @id @default(autoincrement())
  nome           String    @db.VarChar(255)
  descricao      String?   @db.VarChar(255)
  logo_url       String    @db.VarChar(255)
  telefone       String?   @db.VarChar(255)
  link_instagram String?   @db.VarChar(255)
  link_linkedin  String?   @db.VarChar(255)
  link_website   String?   @db.VarChar(255)
  link_github    String?   @db.VarChar(255)
  criado_em      DateTime  @default(now()) @db.Timestamp(6)
  atualizado_em  DateTime  @db.Timestamp(6)
  evento         evento[]
  post           post[]
  usuario        usuario[]
}

model evento {
  id                BigInt     @id @default(autoincrement())
  id_comunidade     BigInt
  titulo            String     @db.VarChar(255)
  capa_url          String     @db.VarChar(255)
  descricao         String     @db.VarChar(255)
  data_hora_inicial DateTime   @db.Timestamp(6)
  data_hora_final   DateTime   @db.Timestamp(6)
  endereco          String?    @db.VarChar(255)
  cidade            String?    @db.VarChar(255)
  estado            String?    @db.VarChar(255)
  cep               String?    @db.VarChar(255)
  link              String?    @db.VarChar(255)
  evento_online     Boolean?   @default(false)
  criado_em         DateTime   @default(now()) @db.Timestamp(6)
  atualizado_em     DateTime   @db.Timestamp(6)
  comunidade        comunidade @relation(fields: [id_comunidade], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model post {
  id            BigInt     @id @default(autoincrement())
  id_comunidade BigInt
  texto         String     @db.VarChar(255)
  criado_em     DateTime   @default(now()) @db.Timestamp(6)
  atualizado_em DateTime   @db.Timestamp(6)
  comunidade    comunidade @relation(fields: [id_comunidade], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model usuario {
  id            BigInt      @id @default(autoincrement())
  id_comunidade BigInt?
  email         String      @unique @db.VarChar(255)
  senha         String      @db.VarChar(255)
  funcao        String      @db.VarChar(255)
  usuario_root  Boolean?    @default(false)
  criado_em     DateTime    @default(now()) @db.Timestamp(6)
  atualizado_em DateTime    @db.Timestamp(6)
  comunidade    comunidade? @relation(fields: [id_comunidade], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
